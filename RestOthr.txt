//RESTOTHR JOB CLASS=A,MSGCLASS=A,MSGLEVEL=(1,1),NOTIFY=HERC01,
//         REGION=1024K ,USER=HERC01,PASSWORD=CUL8TR
//********************************************************************
//*  REMOVE space before user in job if so desired.
//*  Change MSGCLASS above is so desired.
//*  Change 'volser' into your volume serial.
//*  Change 'your.upload.xmi' in the dataset where you uploaded the
//*                           xmi file.
//********************************************************************
//*
//*  THIS JOB RECEIVES THE ARCHEXTN SOFTWARE FROM A XMI FILE.
//*
//*  THE SOFTWARE RESIDES IN 10 DATASETS.  BY DEFAULT, THE DATASETS
//*  ARE PREFIXED WITH 'ARCHEXTN' ON volser.
//*
//*
//*   .ASM     CONTAINS BAL SUBROUTINE SOURCE CODE.
//*   .COB     CONTAINS SOURCE CODE FOR THE SETRC PROGRAM.
//*   .INCLLIB CONTAINS REQUIRED PL/I INCLUDES FOR ARCHEXTN.
//*   .CNTL    CONTAIN ALL RELATED JCL
//*   .LISTING CONTAINS COMPILER GENERATED LISTINGS FOR ARCHEXTN.
//*   .LOADLIB CONTAINS THE EXECUTABLE CODE.
//*   .MACLIB  CONTAINS THE REQUIRED MACROS.
//*   .NCALIB  CONTAINS THE COMPILED SUBROUTINE CODE.
//*   .PLI     CONTAINS PL/I SOURCE CODE FOR ARCHEXTN.
//*   .PROCLIB CONTAINS ALL THE PROCS FOR EXECUTING ARCHEXTN PROGRAMS.
//*
//********************************************************************
//*
//RECV370  PROC IN=,OUT=,VOL=
//RECV370  EXEC PGM=RECV370,REGION=1024K
//RECVLOG   DD SYSOUT=*                     RECV370 OUTPUT MESSAGES
//SYSPRINT  DD SYSOUT=*                     IEBCOPY OUTPUT MESSAGES
//SYSIN     DD DUMMY                        IEBCOPY REQUIRES
//SYSUT1    DD UNIT=SYSDA,                  WORK DATASET
//             SPACE=(CYL,(10,10)),
//             DCB=BLKSIZE=5600
//XMITIN    DD DSN=&IN,DISP=SHR                   INPUT DATASET
//SYSUT2    DD DDNAME=XMITOUT
//XMITOUT   DD DSN=&OUT,DISP=(NEW,CATLG,DELETE),  OUTPUT DATASET
//             UNIT=SYSDA,SPACE=(CYL,(3,1,5),RLSE),VOL=SER=&VOL,
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120,DSORG=PO)
// PEND
//*
//* -------------------------------------------------------*
//* ENSURE PARENT HLQ ALIAS IS DECLARED
//* -------------------------------------------------------*
//DEFALIAS EXEC PGM=IDCAMS
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
 PARM GRAPHICS(CHAIN(SN))
 LISTCAT ALIAS  ENT(ARCHEXTN)
 /* REVIEW AND MODIFY CATALOG NAME BELOW */
 IF LASTCC NE 0 THEN -
    DEFINE ALIAS(NAME(ARCHEXTN) RELATE(SYS1.UCAT.TK5))
//*
//*  DELETE ARCHEXTN DATASETS
//*
//STEP01  EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
 DELETE 'ARCHEXTN.V1R1M0.ASM' NONVSAM PURGE
 DELETE 'ARCHEXTN.V1R1M0.COB' NONVSAM PURGE
 DELETE 'ARCHEXTN.V1R1M0.INCLLIB' NONVSAM PURGE
 DELETE 'ARCHEXTN.V1R1M0.CNTL' NONVSAM PURGE
 DELETE 'ARCHEXTN.V1R1M0.LISTING' NONVSAM PURGE
 DELETE 'ARCHEXTN.V1R1M0.LOADLIB' NONVSAM PURGE
 DELETE 'ARCHEXTN.V1R1M0.MACLIB' NONVSAM PURGE
 DELETE 'ARCHEXTN.V1R1M0.NCALIB' NONVSAM PURGE
 DELETE 'ARCHEXTN.V1R1M0.PLI' NONVSAM PURGE
 DELETE 'ARCHEXTN.V1R1M0.PROCLIB' NONVSAM PURGE
 DELETE 'ARCHEXTN.V1R1M0.PDSXMI' NONVSAM PURGE
 /* delete previous versions */
 DELETE 'ARCHEXTN.V1R0M0.ASM' NONVSAM PURGE
 DELETE 'ARCHEXTN.V1R0M0.COB' NONVSAM PURGE
 DELETE 'ARCHEXTN.V1R0M0.INCLLIB' NONVSAM PURGE
 DELETE 'ARCHEXTN.V1R0M0.CNTL' NONVSAM PURGE
 DELETE 'ARCHEXTN.V1R0M0.LISTING' NONVSAM PURGE
 DELETE 'ARCHEXTN.V1R0M0.LOADLIB' NONVSAM PURGE
 DELETE 'ARCHEXTN.V1R0M0.NCALIB' NONVSAM PURGE
 DELETE 'ARCHEXTN.V1R0M0.PLI' NONVSAM PURGE
 DELETE 'ARCHEXTN.V1R0M0.PROCLIB' NONVSAM PURGE
 DELETE 'ARCHEXTN.V1R0M0.PDSXMI' NONVSAM PURGE
 SET LASTCC = 0
 SET MAXCC = 0
//*
//*
//STEP02 EXEC RECV370,OUT='ARCHEXTN.V1R1M0.PDSXMI',
//       IN='your.upload.xmi',VOL=volser
//*
//STEP03 EXEC RECV370,OUT='ARCHEXTN.V1R1M0.ASM',
//       IN='ARCHEXTN.V1R1M0.PDSXMI(ASM)',VOL=volser
//*
//STEP04 EXEC RECV370,OUT='ARCHEXTN.V1R1M0.INCLLIB',
//       IN='ARCHEXTN.V1R1M0.PDSXMI(INCLLIB)',VOL=volser
//XMITOUT DD DCB=BLKSIZE=400
//*
//STEP05 EXEC RECV370,OUT='ARCHEXTN.V1R1M0.CNTL',
//       IN='ARCHEXTN.V1R1M0.PDSXMI(JCL)',VOL=volser
//*
//STEP06 EXEC RECV370,OUT='ARCHEXTN.V1R1M0.LISTING',
//       IN='ARCHEXTN.V1R1M0.PDSXMI(LISTING)',VOL=volser
//XMITOUT DD DCB=(RECFM=VBA,LRECL=137,BLKSIZE=1370,DSORG=PO)
//*
//STEP07 EXEC RECV370,OUT='ARCHEXTN.V1R1M0.LOADLIB',
//       IN='ARCHEXTN.V1R1M0.PDSXMI(LOADLIB)',VOL=volser
//XMITOUT DD DCB=(RECFM=U,BLKSIZE=19069,DSORG=PO)
//*
//STEP08 EXEC RECV370,OUT='ARCHEXTN.V1R1M0.NCALIB',
//       IN='ARCHEXTN.V1R1M0.PDSXMI(NCALIB)',VOL=volser
//XMITOUT DD DCB=(RECFM=U,BLKSIZE=19069,DSORG=PO)
//*
//STEP09 EXEC RECV370,OUT='ARCHEXTN.V1R1M0.PLI',
//       IN='ARCHEXTN.V1R1M0.PDSXMI(PLI)',VOL=volser
//*
//STEP10 EXEC RECV370,OUT='ARCHEXTN.V1R1M0.PROCLIB',
//       IN='ARCHEXTN.V1R1M0.PDSXMI(PROCLIB)',VOL=volser
//*
//STEP11 EXEC RECV370,OUT='ARCHEXTN.V1R1M0.MACLIB',
//       IN='ARCHEXTN.V1R1M0.PDSXMI(MACLIB)',VOL=volser
//*
//STEP12 EXEC RECV370,OUT='ARCHEXTN.V1R1M0.COB',
//       IN='ARCHEXTN.V1R1M0.PDSXMI(COB)',VOL=volser
//*
//*  DELETE ARCHEXTN.PDSXMI
//*
//STEPLST EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
 DELETE 'ARCHEXTN.V1R1M0.PDSXMI' NONVSAM PURGE
 SET LASTCC = 0
 SET MAXCC = 0
//
